@page "/player/{id}"
@using BlazorApp1.Client.Layout
@using System.Collections.Generic
@using System.Net.Http
@inject HttpClient Http
@using System.Net.Http.Json
@inject NavigationManager NavigationManager


<PageTitle>@PageTitle</PageTitle>
<h1 hidden>@PageTitle</h1>

<TopNavComponent PageTitle="@PageTitle" />

<div id="content" class="container mx-auto p-md-5 px-4 px-sm-0">
    <div id="player" class="col">
        <img src="@Response.Image" alt="@Response.Name" id="player-image" class="" />
        <h2 class="fw-bold fs-4 px-0" id="song-title">
            <span>@Response.Name</span>
            <i class="bi bi-explicit icon"></i>
            
            <button class="btn-transparent-bg-border">
                <i class="bi bi-heart icon"></i>
            </button>
        </h2>
        
        <p class="row w-100 mx-auto fw-semibold" id="song-artist">@Response.Artist</p>
        <div id="progress-bar-wrapper" class="">
            <span class="fs-5">1:34</span>

            <div id="progress-bar" class="progress my-auto" role="progressbar" aria-label="Example 20px high" aria-valuenow="2" aria-valuemin="0" aria-valuemax="100" style="height: 20px">
                <div id="progress-bar-fill" class="progress-bar "></div>
            </div>
            <span class="fs-5">3:45</span>
        </div>

        <div id="player-buttons-wrapper">
            <button class="btn-transparent-bg-border">
                <i class="bi bi-arrow-repeat icon"></i>
            </button>
            <button class="btn-transparent-bg-border">
                <i class="bi bi-skip-start icon"></i>
            </button>
            <button class="btn-transparent-bg-border">
                <i class="bi bi-play-circle icon"></i>
            </button>
            <button class="btn-transparent-bg-border">
                <i class="bi bi-skip-end icon"></i>
            </button>
            <button class="btn-transparent-bg-border">
                <i class="bi bi-shuffle icon"></i>
            </button>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public string Id { get; set; }

    // The playlist object definition
    private class Song
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Artist { get; set; }
        public string Image { get; set; }
    }

    // private Song song = new Song { Id = 1, Name = "Song 1", Artist = "Artist 1", Image = "https://via.placeholder.com/150" };
    
    private string PageTitle { get; set; } = "Now Playing:";

    private Song Response = new Song();


    // The http client  object
    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Use navigation manager to get the base url address of the http client
            var baseUri = NavigationManager.BaseUri;

            // Use the base address of the http client to get the playlists
            Response = await Http.GetFromJsonAsync<Song>(baseUri + "api/songs/" + Id);

            if (Response != null)
            {
                PageTitle = "Now Playing: " + Response.Name;
            }
            else
            {
                PageTitle = "Song not found";
            }
        }
        catch (Exception ex)
        {
            // Handle the error appropriately here (log it, show a message to the user, etc.)
            PageTitle = "Error loading Song";
        }
    }
}
